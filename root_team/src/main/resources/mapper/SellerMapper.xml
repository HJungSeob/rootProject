<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="root.team.com.SellerMapper">

	<insert id="join" parameterType="sellerVO">
		insert into tb_seller (s_businessnum, s_pw, s_firstname, s_lastname, s_email, s_tel, s_birth, s_zipcode, s_address, s_restaddress)
			values(#{s_businessnum}, #{s_pw}, #{s_firstname}, #{s_lastname}, #{s_email}, #{s_tel}, #{s_birth}, #{s_zipcode}, #{s_address}, #{s_restaddress})
			
		<selectKey keyProperty="s_idx" order="AFTER" resultType="int">
        	SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<insert id="info" parameterType="_int">
		INSERT INTO tb_seller_info (s_idx, s_profile, s_storename) 
			VALUES (#{s_idx}, '기본프로필.png', CONCAT('rootstore', #{s_idx}))
	</insert>
	
	<insert id="state" parameterType="_int">
		INSERT INTO tb_seller_state (s_idx) 
			VALUES (#{s_idx})
	</insert>
	
	<select id="getPassword" parameterType="string" resultType="string">
		select s_pw
			from tb_seller
			where s_businessnum = #{s_businessnum}
	</select>
	
	<select id="login" parameterType="string" resultType="sellerVO">
		select *
			from tb_seller s, tb_seller_state ss, tb_seller_info si
			where s.s_idx = ss.s_idx
			and s.s_idx = si.s_idx 
			and s_businessnum = #{s_businessnum}
			and ss.s_cancel = 'N'		
	</select>
	
	<update id="lastLoginDate" parameterType="_int">
		update tb_seller set s_lastlogindate = now()
			where s_idx = #{s_idx}
	</update>
	
	<update id="update" parameterType="sellerVO">
		update tb_seller set
		<choose>
			<when test="s_pw != null">
				s_pw = #{s_pw}, s_modifydate = now(), s_pwmodifydate = now()		
			</when>
			<when test="s_firstname != null and s_lastname != null and s_tel != null and s_birth != null and s_zipcode != null and s_address != null">
				s_firstname = #{s_firstname}, s_lastname = #{s_lastname}, s_tel = #{s_tel}, s_birth = #{s_birth}, s_zipcode = #{s_zipcode}, s_address = #{s_address}, s_restaddress = #{s_restaddress}, s_modifydate = now()
			</when>
		</choose>
		where s_idx = #{s_idx}
	</update>
	
	<update id="infoUpdate" parameterType="sellerVO">
		UPDATE tb_seller_info si
		JOIN tb_seller s ON si.s_idx = s.s_idx
		<choose>
			<when test="s_profile != null">
				SET si.s_profile = #{s_profile}, si.s_storename = #{s_storename}, si.s_storeintro = #{s_storeintro}, s.s_modifydate = NOW()
			</when>
			<otherwise>
				SET si.s_profile = "기본프로필.png", si.s_storename = #{s_storename}, si.s_storeintro = #{s_storeintro}, s.s_modifydate = NOW()
			</otherwise>
		</choose>
		WHERE s.s_idx = #{s_idx};
	</update>
	
	<select id="getSeller" parameterType="_int" resultType="sellerVO">
		select *
			from tb_seller s, tb_seller_state ss, tb_seller_info si
			where s.s_idx = ss.s_idx
			and s.s_idx = si.s_idx 
			and s.s_idx = #{s_idx}
	</select>
	
	<update id="cancel" parameterType="_int">
		UPDATE tb_seller_state ss
		JOIN tb_seller s ON ss.s_idx = s.s_idx
		SET ss.s_cancel = 'Y',
		s.s_modifydate = NOW()
		WHERE s.s_idx = #{s_idx};
	</update>
	
	<select id="telCheck" parameterType="string" resultType="_int">
		select count(*)
		from tb_seller
		where s_tel = #{s_tel}
	</select>
	
	<select id="businessnumCheck" parameterType="string" resultType="_int">
		select count(*)
		from tb_seller
		where s_businessnum = #{s_businessnum}
	</select>
	
	<select id="emailCheck" parameterType="string" resultType="_int">
		select count(*)
		from tb_seller
		where s_email = #{s_email}
	</select>
	
	<update id="updatePassword" parameterType="buyerVO">
		update tb_seller
			set s_pw = #{s_pw}
			where s_businessnum = #{s_businessnum}
	</update>
	
	<select id="matchBusinessnumEmail" parameterType="buyerVO" resultType="_int">
		SELECT count(*)
		FROM tb_seller s, tb_seller_state ss, tb_seller_info si
		WHERE s.s_idx = ss.s_idx
		AND s.s_idx = si.s_idx
		AND s.s_businessnum = #{s_businessnum}
		AND s.s_email = #{s_email}
	</select>
	
	<select id="passwordCheck" parameterType="string" resultType="_int">
		select count(*)
		from tb_seller
		where s_pw = #{s_pw}
	</select>
	
	<select id="getPw" parameterType="_int" resultType="string">
		select s_pw
			from tb_seller
			where s_idx = #{s_idx}
	</select>
	
	<update id="verifyEmail" parameterType="_int">
		update
		tb_seller_state set s_check = 'Y'
		where s_check = 'N'
		and s_idx = #{s_idx}
	</update>
	
	<select id="getS_idx" parameterType="String" resultType="_int">
	SELECT s_idx
		FROM tb_seller
		WHERE s_email = #{s_email}
	</select>
	
	<select id="getItem" parameterType="_int" resultType="itemVO">
	SELECT *
		from vw_item
		where s_idx = #{s_idx}
	</select>
	
	<select id="getItems" parameterType="searchVO" resultType="itemVO">
		<choose>
			<when test="itemNum != '' or itemName != '' or itemState != 0 or largeCategory != 0 or smallCategory != 0 or startDate != null or endDate != null"> <!-- 검색 조건이 있는 경우 -->
				select *
				from vw_item 
				where s_idx = #{s_idx}
				<if test="itemNum != ''">
					and i_idx = #{itemNum}
				</if>
				<if test="itemName != ''">
					and i_name like CONCAT('%', #{itemName}, '%')
				</if>
				<if test="itemState != 0">
					<choose>
						<when test="itemState == 1">
							and i_state = #{itemState}
						</when>
						<when test="itemState == 2">
							and i_state = #{itemState}
						</when>
						<when test="itemState == 3">
							and i_state = #{itemState}
						</when>
					</choose>
				</if>
				<if test="largeCategory != 0">
					<choose>
						<when test='largeCategory == 1'>
							<choose>
								<when test="smallCategory == 0">
									and c_idx BETWEEN 1 AND 5
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 2'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 6 AND 10
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 3'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 11 AND 15
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 4'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 16 AND 20
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 5'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 21 AND 25
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
					</choose>
				</if>
				
				<if test="startDate != null">
					<![CDATA[
						and i_modifydate >= #{startDate}
					 ]]>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and i_modifydate <= #{endDate}
					 ]]>
				</if>
				
				order by i_idx desc
				limit 6 offset #{startIdx}
			</when>
	
			<otherwise> <!-- 검색 조건이 없는 경우 -->
				select *
				from vw_item 
				where s_idx = #{s_idx}
				order by i_idx desc
				limit 6 offset #{startIdx}
			</otherwise>
		</choose>
	</select>
	
	<select id="getItemTotalCount" parameterType="searchVO"	 resultType="_int">
		<choose>
			<when test="itemNum != '' or itemName != '' or itemState != 0 or largeCategory != 0 or smallCategory != 0 or startDate != null or endDate != null"> <!-- 검색 조건이 있는 경우 -->
				select count(*)
				from vw_item 
				where s_idx = #{s_idx}
				<if test="itemNum != ''">
					and i_idx = #{itemNum}
				</if>
				<if test="itemName != ''">
					and i_name like CONCAT('%', #{itemName}, '%')
				</if>
				<if test="itemState != 0">
					<choose>
						<when test="itemState == 1">
							and i_state = #{itemState}
						</when>
						<when test="itemState == 2">
							and i_state = #{itemState}
						</when>
						<when test="itemState == 3">
							and i_state = #{itemState}
						</when>
					</choose>
				</if>
				<if test="largeCategory != 0">
					<choose>
						<when test='largeCategory == 1'>
							<choose>
								<when test="smallCategory == 0">
									and c_idx BETWEEN 1 AND 5
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 2'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 6 AND 10
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 3'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 11 AND 15
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 4'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 16 AND 20
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
						<when test='largeCategory == 5'>
							<choose>
								<when test="smallCategory == 0">
									AND c_idx BETWEEN 21 AND 25
								</when>
								<otherwise>
									and c_idx = #{smallCategory}
								</otherwise>
							</choose>
						</when>
					</choose>
				</if>
				
				<if test="startDate != null">
					<![CDATA[
						and i_modifydate >= #{startDate}
					 ]]>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and i_modifydate <= #{endDate}
					 ]]>
				</if>
			</when>
	
			<otherwise> <!-- 검색 조건이 없는 경우 -->
				select count(*)
				from vw_item 
				where s_idx = #{s_idx}
			</otherwise>
		</choose>
	</select>
	
	<select id="getOrders" parameterType="searchVO" resultType="orderStateVO">
		<choose>
			<when test="orderNum != '' or orderNickname != '' or orderState != 0 or startDate != null or endDate != null">
				SELECT *
				FROM tb_buyer_order_state bos
				INNER JOIN tb_buyer_order bo ON bos.bo_idx = bo.bo_idx 
				INNER JOIN tb_buyer_info bi ON bi.b_idx = bo.b_idx
				INNER JOIN tb_item i ON bos.i_idx = i.i_idx
				INNER JOIN tb_seller s ON s.s_idx  = i.s_idx
				WHERE s.s_idx = #{s_idx}
				<if test="orderNum != ''">
					and bo_idx = #{orderNum}
				</if>
				<if test="orderNickname != ''">
					and b_nickname like CONCAT('%', #{orderNickname}, '%')
				</if>
				<if test="orderState != 0">
					<choose>
						<when test="orderState == 1">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 2">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 3">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 4">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 5">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 6">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 7">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 8">
							and bos_state = #{orderState}
						</when>
					</choose>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and bo_orderdate >= #{startDate}
					 ]]>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and bo_orderdate <= #{endDate}
					 ]]>
				</if>
				
				order by bos.bo_idx desc
				limit 6 offset #{startIdx}
			</when>
	
			<otherwise>
				SELECT *
				FROM tb_buyer_order_state bos
				INNER JOIN tb_buyer_order bo ON bos.bo_idx = bo.bo_idx 
				INNER JOIN tb_buyer_info bi ON bi.b_idx = bo.b_idx
				INNER JOIN tb_item i ON bos.i_idx = i.i_idx
				INNER JOIN tb_seller s ON s.s_idx  = i.s_idx
				WHERE s.s_idx = #{s_idx}
				order by bos.bo_idx desc
				limit 6 offset #{startIdx}
			</otherwise>
		</choose>
	</select>
	
	<select id="getOrderTotalCount" parameterType="searchVO" resultType="_int">
		<choose>
			<when test="orderNum != '' or orderNickname != '' or orderState != 0 or startDate != null or endDate != null">
				SELECT count(*)
				FROM tb_buyer_order_state bos
				INNER JOIN tb_buyer_order bo ON bos.bo_idx = bo.bo_idx 
				INNER JOIN tb_buyer_info bi ON bi.b_idx = bo.b_idx
				INNER JOIN tb_item i ON bos.i_idx = i.i_idx
				INNER JOIN tb_seller s ON s.s_idx  = i.s_idx
				WHERE s.s_idx = #{s_idx}
				<if test="orderNum != ''">
					and bo_idx = #{orderNum}
				</if>
				<if test="orderNickname != ''">
					and b_nickname like CONCAT('%', #{orderNickname}, '%')
				</if>
				<if test="orderState != 0">
					<choose>
						<when test="orderState == 1">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 2">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 3">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 4">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 5">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 6">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 7">
							and bos_state = #{orderState}
						</when>
						<when test="orderState == 8">
							and bos_state = #{orderState}
						</when>
					</choose>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and bo_orderdate >= #{startDate}
					 ]]>
				</if>
				<if test="startDate != null">
					<![CDATA[
						and bo_orderdate <= #{endDate}
					 ]]>
				</if>
			</when>
	
			<otherwise>
				SELECT count(*)
				FROM tb_buyer_order_state bos
				INNER JOIN tb_buyer_order bo ON bos.bo_idx = bo.bo_idx 
				INNER JOIN tb_buyer_info bi ON bi.b_idx = bo.b_idx
				INNER JOIN tb_item i ON bos.i_idx = i.i_idx
				INNER JOIN tb_seller s ON s.s_idx  = i.s_idx
				WHERE s.s_idx = #{s_idx}
			</otherwise>
		</choose>
	</select>
</mapper>